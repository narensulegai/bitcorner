{"version":3,"sources":["firebase.js","contexts/AuthContext.js","util/fetch/index.js","util/fetch/api/index.js","components/Landing.js","components/CustomerSignup.js","components/BankAccount.js","components/PrevailingRates.js","components/Balance.js","components/TransactBitCoin.js","components/SendBill.js","components/PayBill.js","components/MarketStrategy.js","components/TransactionProcessing.js","components/ServiceFee.js","components/Messaging.js","components/Reporting.js","components/CustomerHome.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","signup","email","password","name","a","createUserWithEmailAndPassword","r","user","sendEmailVerification","signInGoogle","signInWithPopup","signUpWithGoogle","getToken","getIdToken","useEffect","onAuthStateChanged","value","login","signInWithEmailAndPassword","logout","signOut","updateEmail","updatePassword","Provider","callCount","call","method","api","data","Promise","res","rej","window","showLoading","headers","token","authorization","fetch","body","JSON","stringify","credentials","mode","then","hideLoading","json","d","status","error","message","err","put","post","get","getBankAccount","updateCustomer","getCustomer","getTransactBitcoin","setTransactBitcoin","getSendBill","addSendBill","editSendBill","getBill","getReports","getPrevailingRates","getBalance","setBalance","currencyList","code","allCurrencyList","withRouter","history","emailRef","useRef","passwordRef","verifyAndRedirect","isEmailVerified","customer","push","appRoutes","customerProfile","handleOnLogin","current","handleOnGoogleLogin","className","type","placeholder","ref","onClick","to","customerSignup","nameRef","handleOnSignup","delete","handleOnSignupWithGoogle","customerLogin","BankAccount","bankNameRef","countryNameRef","accountNumberRef","ownersNameRef","addressRef","currencyRef","bankAccount","setBankAccount","setCustomer","handleOnSave","bankDetails","bankName","country","accountNumber","ownerName","address","primaryCurrency","toReload","location","reload","defaultValue","map","c","i","PrevailingRates","prevailingRates","setPrevailingRates","reports","setReports","interval","setInterval","clearInterval","lastestPrices","p","latestAskPrice","latestBidPrice","latestTransactionPrice","currency","reverse","b","id","buy","amount","bitcoins","marketOrder","minPrice","Balance","USD","EUR","GBP","INR","RMB","BITCOIN","balance","setBalances","loadBalance","balances","length","_","keyBy","handleOnBalanceChange","newBalance","f","n","Number","isNaN","parseFloat","bs","onChange","e","target","TransactBitCoin","transactBitcoins","setTransactBitcoins","setIsMarketPrice","editOrder","setEditOrder","open","setOpen","isBuyRef","amountRef","editAmountRef","bitcoinsRef","handleOnSellBitcoin","parseInt","checked","toggleModel","handleOnCancelOrder","handleOnEditOrder","Dialog","onClose","handleOnEdit","SendBill","descriptionRef","dueRef","editDescriptionRef","sendBills","setSendBills","editSendBills","setEditSendBills","handleOnSendBill","description","due","handleOnSaveEditSendBill","handleOnSaveCancelSendBill","handleClose","Date","toDateString","handleOnEditSendBill","PayBill","bills","setBills","currentBill","setCurrentBill","exchangeRate","setExchangeRate","serviceFee","setServiceFee","billAmount","setBillAmount","totalBalance","setTotalBalance","billCurrency","setBillCurrency","exchangeRates","setExchangeRates","updateRates","currencyVal","bill","exchangeRatesValue","balancesValue","balancesData","lExchangeRate","lServiceFee","exchangeRatesData","temp","rates","ServiceRate","filter","toFixed","loadInitialData","billsValue","handleOnBillChange","handleBalance","rejectBill","rejectedBill","payBill","billData","MarketStrategy","TransactionProcessing","ServiceFee","Messaging","Reporting","bitcornerBalance","noOfOrdersFulfilled","totalCustomers","totalOrdersCreated","transactions","listen","onLogout","home","routes","customerBalance","customerTransactBitCoin","customerSendBill","customerPayBill","customerMarketStrategy","customerTransactionProcessing","customerServiceFee","customerMessaging","customerReporting","path","exact","customerHome","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","msg","document","getElementById","innerText","style","display","ReactDOM","render"],"mappings":"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","file":"static/js/main.a577159b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n  apiKey: 'AIzaSyD0KdL1iGJdhkWyaPjVXxjknhdTRnc6Xb8',\n  authDomain: 'bitcorner-7f9ee.firebaseapp.com',\n  projectId: 'bitcorner-7f9ee',\n  storageBucket: 'bitcorner-7f9ee.appspot.com',\n  messagingSenderId: '302168724338',\n  appId: '1:302168724338:web:c7f3826aa199226dd903eb',\n});\n\nexport const auth = app.auth();\nexport default app;\n","import React, { useContext, useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { auth } from '../firebase';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const signup = async (email, password, name) => {\n    const r = await auth.createUserWithEmailAndPassword(email, password);\n    await r.user.sendEmailVerification();\n    return r;\n  };\n\n  const signInGoogle = async () => {\n    const r = await auth.signInWithPopup(provider);\n    return r;\n  };\n\n  const signUpWithGoogle = async () => {\n    const r = await auth.signInWithPopup(provider);\n    await r.user.sendEmailVerification();\n    return r;\n  };\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  const getToken = async () => {\n    return currentUser.getIdToken(true);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    updateEmail,\n    updatePassword,\n    getToken,\n    signInGoogle,\n    signUpWithGoogle,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import { auth } from '../../firebase';\n\nlet callCount = 0;\n// eslint-disable-next-line no-async-promise-executor\nconst call = (method, api, data = null) => new Promise(async (res, rej) => {\n  callCount += 1;\n  window.showLoading();\n  const headers = { 'Content-Type': 'application/json' };\n  const token = await auth.currentUser.getIdToken();\n  if (token) {\n    headers.authorization = token;\n  }\n  fetch(`/api/${api}`,\n    {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : null,\n      // CORS\n      credentials: 'include',\n      mode: 'cors',\n    })\n    .then((r) => {\n      callCount -= 1;\n      if (callCount === 0) window.hideLoading();\n      r.json()\n        .then((d) => {\n          if (r.status === 200) {\n            window.error(null);\n            res(d);\n          } else {\n            window.message(null);\n            window.error(d.err || d.message);\n            rej(d);\n          }\n        });\n    });\n});\n\nexport const put = (api, data) => call('PUT', api, data);\nexport const post = (api, data) => call('POST', api, data);\nexport const destroy = (api, data) => call('DELETE', api, data);\nexport const get = (api) => call('GET', api);\n","import {\n  get, post, destroy, put,\n} from '..';\n\nexport const getBankAccount = () => get('bankAccount');\nexport const updateBankAccount = (d) => post('bankAccount', d);\nexport const updateCustomer = (d) => post('customer', d);\nexport const getCustomer = () => get('customer');\nexport const getTransactBitcoin = () => get('transactBitcoin');\nexport const setTransactBitcoin = (d) => post('transactBitcoin', d);\nexport const getSendBill = () => get('sendBill');\nexport const addSendBill = (d) => post('sendBill', d);\nexport const editSendBill = (d) => put('sendBill', d);\n\nexport const getBill = () => get('payBill');\nexport const getReports = () => get('reports');\nexport const settlePayBill = (d) => put('payBill', d);\nexport const getPrevailingRates = () => get('prevailingRates');\n\nexport const getBalance = () => get('balance');\nexport const getExchangeRates = () => get('balance/rates');\nexport const setBalance = (d) => post('balance', d);\nexport const fileUrl = (fileId) => {\n  return `/file/${fileId}`;\n};\n\nexport const currencyList = [\n  { code: 'USD' },\n  { code: 'GBP' },\n  { code: 'INR' },\n  { code: 'EUR' },\n  { code: 'RMB' },\n];\n\nexport const allCurrencyList = [...currencyList, { code: 'BITCOIN' }];\n","import React, { useRef } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getCustomer } from '../util/fetch/api';\n\nconst Landing = ({ history }) => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const { login, signInGoogle } = useAuth();\n\n  const verifyAndRedirect = async () => {\n    const { isEmailVerified, customer } = await getCustomer();\n    if (isEmailVerified && customer !== null) {\n      history.push(window.appRoutes.customerProfile);\n    } else {\n      window.message('Please signup / verify your email first');\n    }\n  };\n\n  const handleOnLogin = async () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    try {\n      await login(email, password);\n      await verifyAndRedirect();\n    } catch (e) {\n      window.error(e.message);\n    }\n  };\n\n  const handleOnGoogleLogin = async () => {\n    try {\n      await signInGoogle();\n      await verifyAndRedirect();\n    } catch (e) {\n      window.error(e.message);\n    }\n  };\n\n  return (\n    <div className=\"full\">\n      <div className=\"header\">\n        <div className=\"center\">\n          Welcome to BitCorner\n        </div>\n      </div>\n      <div className=\"medium-margin-top\">\n        <div className=\"center\">\n          <h2>Customer login</h2>\n          <div>\n            <input type=\"text\" placeholder=\"Email\" ref={emailRef} />\n          </div>\n          <div>\n            <input type=\"password\" placeholder=\"Password\" ref={passwordRef} />\n          </div>\n          <div>\n            <button className=\"button\" onClick={handleOnLogin}>Log in</button>\n          </div>\n          <div className=\"small-margin-top\">\n            Or\n          </div>\n          <div>\n            <button className=\"button\" onClick={handleOnGoogleLogin}>Log in with Google</button>\n          </div>\n        </div>\n        <div className=\"center medium-margin-top\">\n          <h3>Dont have an account?</h3>\n          <Link to={window.appRoutes.customerSignup}>Signup here</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLanding.propTypes = {};\n\nexport default withRouter(Landing);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { updateCustomer } from '../util/fetch/api';\n\nfunction CustomerSignup({ history }) {\n  const nameRef = React.useRef(null);\n  const emailRef = React.useRef(null);\n  const passwordRef = React.useRef(null);\n  const { signup, signUpWithGoogle } = useAuth();\n\n  const handleOnSignup = async () => {\n    const name = nameRef.current.value;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    let r = null;\n    try {\n      r = await signup(email, password, name);\n    } catch (e) {\n      window.error(e.message);\n    }\n    if (r) {\n      try {\n        await updateCustomer({ email, name });\n        history.push('/');\n        window.message('Please click on the verification link in your email');\n      } catch (e) {\n        r.user.delete();\n      }\n    }\n  };\n\n  const handleOnSignupWithGoogle = async () => {\n    const name = nameRef.current.value;\n    let r = null;\n    try {\n      r = await signUpWithGoogle();\n    } catch (e) {\n      window.error(e.message);\n    }\n    if (r) {\n      try {\n        await updateCustomer({ email: r.user.email, name });\n        history.push(window.appRoutes.customerLogin);\n        window.message('Please click on the verification link in your email');\n      } catch (e) {\n        r.user.delete();\n      }\n    }\n  };\n\n  return (\n    <div className=\"center\">\n      <h2>Signup with BitCorner</h2>\n      <div>\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" ref={nameRef} />\n      </div>\n      <div>\n        <input type=\"text\" name=\"email\" placeholder=\"Email\" ref={emailRef} />\n      </div>\n      <div>\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" ref={passwordRef} />\n      </div>\n      <div>\n        <button className=\"button\" onClick={handleOnSignup}>Sign up</button>\n      </div>\n      <div>\n        <button className=\"button\" onClick={handleOnSignupWithGoogle}>Sign up with google</button>\n      </div>\n      <div className=\"small-margin-top\">\n        Already have an account <Link to=\"/\">Login</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(CustomerSignup);\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  currencyList, getBankAccount, getCustomer, updateBankAccount,\n} from '../util/fetch/api';\n\nconst BankAccount = () => {\n  const bankNameRef = useRef(null);\n  const countryNameRef = useRef(null);\n  const accountNumberRef = useRef(null);\n  const ownersNameRef = useRef(null);\n  const addressRef = useRef(null);\n  const currencyRef = useRef(null);\n  const [bankAccount, setBankAccount] = useState(null);\n  const [customer, setCustomer] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      const bankAccount = await getBankAccount();\n      const { customer } = await getCustomer();\n      if (bankAccount === null) {\n        window.message('You dont have a bank account yet, please add one');\n        setBankAccount({}); // set default\n      } else {\n        setBankAccount(bankAccount);\n      }\n      setCustomer(customer);\n    })();\n  }, []);\n\n  const handleOnSave = async () => {\n    const bankDetails = {\n      bankName: bankNameRef.current.value,\n      country: countryNameRef.current.value,\n      accountNumber: accountNumberRef.current.value,\n      ownerName: ownersNameRef.current.value,\n      address: addressRef.current.value,\n      primaryCurrency: currencyRef.current.value,\n    };\n    const toReload = await getBankAccount() === null;\n    await updateBankAccount(bankDetails);\n    setBankAccount(await getBankAccount());\n    if (toReload) {\n      window.location.reload(false);\n    }\n    window.message('Updated your bank details');\n  };\n\n  return (customer && bankAccount) ? (\n    <div className=\"body\">\n      <div>\n        Welcome {customer.name}\n        <h6>{customer.email}</h6>\n      </div>\n      <div>\n        <h2>Bank account</h2>\n      </div>\n      <div>\n        <div className=\"small-margin-top\">\n          Bank name <br /><input type=\"text\" ref={bankNameRef} defaultValue={bankAccount.bankName} />\n        </div>\n        <div className=\"small-margin-top\">\n          Country <br /><input type=\"text\" ref={countryNameRef} defaultValue={bankAccount.country} />\n        </div>\n        <div className=\"small-margin-top\">\n          Account number <br /><input type=\"text\" ref={accountNumberRef}\n            defaultValue={bankAccount.accountNumber} />\n        </div>\n        <div className=\"small-margin-top\">\n          Owners name <br /><input type=\"text\" ref={ownersNameRef} defaultValue={bankAccount.ownerName} />\n        </div>\n        <div className=\"small-margin-top\">\n          Address <br /><input type=\"text\" ref={addressRef} defaultValue={bankAccount.address} />\n        </div>\n        <div className=\"small-margin-top\">\n          Primary currency <br />\n          <select ref={currencyRef} defaultValue={bankAccount.primaryCurrency}>\n            {currencyList.map((c, i) => {\n              return <option key={i} value={c.code}>{c.code}</option>;\n            })}\n          </select>\n        </div>\n        <div className=\"small-margin-top\">\n          <button className=\"small-margin-top button\" onClick={handleOnSave}>Save</button>\n        </div>\n      </div>\n\n    </div>\n  ) : <div>Loading bank account</div>;\n};\n\nexport default BankAccount;\n","import React, { useEffect, useState } from 'react';\nimport { getPrevailingRates, getReports } from '../util/fetch/api';\n\nconst PrevailingRates = () => {\n  const [prevailingRates, setPrevailingRates] = useState([]);\n  const [reports, setReports] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setPrevailingRates(await getPrevailingRates());\n      setReports(await getReports());\n    })();\n    const interval = setInterval(async () => {\n      setPrevailingRates(await getPrevailingRates());\n      setReports(await getReports());\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <h2>Current market price</h2>\n      <div><i>Prices are updated every 5 seconds</i></div>\n      {reports\n        ? (\n          <div>\n            <table className=\"table medium-margin-top\">\n              <thead>\n                <tr>\n                  <td>Latest ask price</td>\n                  <td>Latest bid price</td>\n                  <td>Latest transaction price</td>\n                  <td>Currency</td>\n                </tr>\n              </thead>\n              <tbody>\n                {reports.lastestPrices.map((p, i) => {\n                  return (\n                    <tr key={i}>\n                      <td>{p.latestAskPrice}</td>\n                      <td>{p.latestBidPrice}</td>\n                      <td>{p.latestTransactionPrice}</td>\n                      <td>{p.currency}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )\n        : <div>Showing latest price</div>}\n      <hr />\n      <h3>Current orders</h3>\n      <table className=\"table medium-margin-top\">\n        <thead>\n          <tr>\n            <td>Order Id</td>\n            <td>Transaction type</td>\n            <td>Currency</td>\n            <td>Amount</td>\n            <td>Bitcoins</td>\n            <td>Price type</td>\n            <td>Minimum price</td>\n            <td>Status</td>\n          </tr>\n        </thead>\n        <tbody>\n          {prevailingRates.reverse().map((b) => {\n            return (\n              <tr key={b.id}>\n                <td>{b.id}</td>\n                <td>{b.buy ? 'Buy' : 'Sell'}</td>\n                <td>{b.currency}</td>\n                <td>{b.amount}</td>\n                <td>{b.bitcoins}</td>\n                <td>{b.marketOrder ? 'Market order' : 'Limit order'} </td>\n                <td>{b.minPrice}</td>\n                <td>{b.status}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PrevailingRates;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { getBalance, setBalance, getCustomer } from '../util/fetch/api';\n\nconst Balance = () => {\n  const [customer, setCustomer] = useState(null);\n  const [balance, setBalances] = useState({\n    USD: 0,\n    EUR: 0,\n    GBP: 0,\n    INR: 0,\n    RMB: 0,\n    BITCOIN: 0,\n  });\n\n  const loadBalance = async () => {\n    const balances = await getBalance();\n    if (balances.length) {\n      const b = _.keyBy(balances, 'currency');\n      setBalances({\n        USD: b.USD.balance,\n        EUR: b.EUR.balance,\n        GBP: b.GBP.balance,\n        INR: b.INR.balance,\n        RMB: b.RMB.balance,\n        BITCOIN: b.BITCOIN.balance,\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      setCustomer(await getCustomer());\n      await loadBalance();\n    })();\n  }, []);\n\n  const handleOnBalanceChange = (currency, b) => {\n    const newBalance = { ...balance, [currency]: b };\n    setBalances(newBalance);\n  };\n  const handleOnSave = async () => {\n    const f = (n) => (Number.isNaN(parseFloat(n)) ? 0 : parseFloat(n));\n    const bs = await getBalance();\n    const d = [\n      { currency: 'USD', balance: f(balance.USD) },\n      { currency: 'EUR', balance: f(balance.EUR) },\n      { currency: 'GBP', balance: f(balance.GBP) },\n      { currency: 'INR', balance: f(balance.INR) },\n      { currency: 'RMB', balance: f(balance.RMB) },\n      { currency: 'BITCOIN', balance: f(balance.BITCOIN) },\n    ];\n    if (bs.length) {\n      const b = _.keyBy(bs, 'currency');\n      d[0].id = b.USD.id;\n      d[1].id = b.EUR.id;\n      d[2].id = b.GBP.id;\n      d[3].id = b.INR.id;\n      d[4].id = b.RMB.id;\n      d[5].id = b.BITCOIN.id;\n    }\n    await setBalance(d);\n    window.message('Balance updated.');\n    await loadBalance();\n  };\n\n  return (\n    <div className=\"body\">\n      <h2>Update balance</h2>\n      {customer ? (\n        <div>\n          <div>\n            Account number <b>{customer.customer.bankAccount.accountNumber}</b>\n            &nbsp;&nbsp;({customer.customer.bankAccount.bankName})\n            <br />\n            Primary currency <b>{customer.customer.bankAccount.primaryCurrency}</b>\n          </div>\n          <div>\n            <div className=\"small-margin-top\">\n              USD <br /><input type=\"number\" value={balance.USD}\n                onChange={(e) => handleOnBalanceChange('USD', e.target.value)} />\n            </div>\n            <div className=\"small-margin-top\">\n              EUR <br /><input type=\"number\" value={balance.EUR}\n                onChange={(e) => handleOnBalanceChange('EUR', e.target.value)} />\n            </div>\n            <div className=\"small-margin-top\">\n              GBP <br /><input type=\"number\" value={balance.GBP}\n                onChange={(e) => handleOnBalanceChange('GBP', e.target.value)} />\n            </div>\n            <div className=\"small-margin-top\">\n              INR <br /><input type=\"number\" value={balance.INR}\n                onChange={(e) => handleOnBalanceChange('INR', e.target.value)} />\n            </div>\n            <div className=\"small-margin-top\">\n              RMB <br /><input type=\"number\" value={balance.RMB}\n                onChange={(e) => handleOnBalanceChange('RMB', e.target.value)} />\n            </div>\n            <div className=\"small-margin-top\">\n              Bitcoins <br /><input type=\"number\" value={balance.BITCOIN}\n                onChange={(e) => handleOnBalanceChange('BITCOIN', e.target.value)} />\n            </div>\n          </div>\n          <button className=\"button\" onClick={handleOnSave}>Save</button>\n        </div>\n      ) : 'Loading your profile'}\n\n    </div>\n  );\n};\n\nexport default Balance;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { setTransactBitcoin, getTransactBitcoin, allCurrencyList } from '../util/fetch/api';\n\nconst TransactBitCoin = () => {\n  const [transactBitcoins, setTransactBitcoins] = useState([]);\n  const [marketOrder, setIsMarketPrice] = useState(true);\n  const [editOrder, setEditOrder] = useState({});\n  const [open, setOpen] = useState(false);\n  const isBuyRef = useRef(null);\n  const amountRef = useRef(null);\n  const currencyRef = useRef(null);\n  const editAmountRef = useRef(null);\n  const bitcoinsRef = useRef(null);\n\n  useEffect(() => {\n    (async () => {\n      setTransactBitcoins(await getTransactBitcoin());\n    })();\n  }, []);\n\n  const handleOnSellBitcoin = async () => {\n    let amount = null;\n    const bitcoins = parseInt(bitcoinsRef.current.value);\n    const currency = currencyRef.current.value;\n    if (!marketOrder) {\n      amount = amountRef.current.value;\n    }\n    const d = {\n      buy: isBuyRef.current.checked,\n      marketOrder,\n      amount,\n      bitcoins,\n      currency,\n    };\n    await setTransactBitcoin(d);\n    window.message('Added new order!');\n    setTransactBitcoins(await getTransactBitcoin());\n  };\n\n  const handleOnMarketPriceChange = () => {\n    setIsMarketPrice(!marketOrder);\n  };\n  const toggleModel = () => {\n    setOpen(!open);\n  };\n  const handleOnCancelOrder = async () => {\n    await setTransactBitcoin({ ...editOrder, status: 'CANCELLED' });\n    toggleModel();\n    setTransactBitcoins(await getTransactBitcoin());\n  };\n  const handleOnEditOrder = async () => {\n    const amount = editAmountRef.current.value;\n    await setTransactBitcoin({ ...editOrder, amount });\n    toggleModel();\n    setTransactBitcoins(await getTransactBitcoin());\n  };\n\n  const handleOnEdit = (b) => {\n    setEditOrder(b);\n    toggleModel();\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={toggleModel}>\n        <div className=\"modal\">\n          <h2>Edit Order</h2>\n          <div>\n            Amount <br /><input type=\"number\" ref={editAmountRef} defaultValue={editOrder.amount} />\n          </div>\n          <div className=\"flex flex-justify-content-space-between\">\n            <button className=\"button\" onClick={handleOnCancelOrder}>\n              Cancel order\n            </button>\n            <button className=\"button\" onClick={handleOnEditOrder}>\n              Update order\n            </button>\n            <button className=\"button\" onClick={toggleModel}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </Dialog>\n\n      <div className=\"flex\">\n        <div className=\"flex-full\">\n          <div>\n            <h2>Transact Bitcoin</h2>\n          </div>\n          <div>\n            <div className=\"small-margin-top\">\n              Is buy order&nbsp;<input type=\"checkbox\" ref={isBuyRef} />\n            </div>\n            <div className=\"small-margin-top\">\n              Bitcoins (integer value only)<br /><input type=\"number\" ref={bitcoinsRef} defaultValue=\"0\" />\n            </div>\n            <div className=\"small-margin-top\">\n              <select ref={currencyRef}>\n                {allCurrencyList.map((c, i) => {\n                  return <option key={i} value={c.code}>{c.code}</option>;\n                })}\n              </select>\n            </div>\n            <div className=\"small-margin-top\">\n              Market price &nbsp;<input type=\"checkbox\" checked={marketOrder}\n                onChange={handleOnMarketPriceChange} />\n            </div>\n            {!marketOrder && (\n              <div className=\"small-margin-top\">\n                Amount <br /><input type=\"number\" ref={amountRef} defaultValue=\"0\" />\n              </div>\n            )}\n            <div>\n              <button className=\"button\" onClick={handleOnSellBitcoin}>Transact bitcoin</button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex-full\">\n          <div>{transactBitcoins.length === 0\n            ? <div className=\"center\">You have no transactions</div>\n            : (\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <td>Order Id</td>\n                    <td>Transaction type</td>\n                    <td>Currency</td>\n                    <td>Amount</td>\n                    <td>Bitcoins</td>\n                    <td>Price type</td>\n                    <td>Status</td>\n                    <td>&nbsp;</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {transactBitcoins.map((b) => {\n                    return (\n                      <tr key={b.id}>\n                        <td>{b.id}</td>\n                        <td>{b.buy ? 'Buy' : 'Sell'}</td>\n                        <td>{b.currency}</td>\n                        <td>{b.amount}</td>\n                        <td>{b.bitcoins}</td>\n                        <td>{b.marketOrder ? 'Market order' : 'Limit order'} </td>\n                        <td>{b.status}</td>\n                        <td>\n                          <button className=\"button no-margin-top\" onClick={() => { handleOnEdit(b); }}>\n                            Edit\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TransactBitCoin;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Dialog } from '@material-ui/core';\nimport {\n  getSendBill, addSendBill, editSendBill, getBankAccount, allCurrencyList,\n} from '../util/fetch/api';\n\nconst SendBill = () => {\n  const emailRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const currencyRef = useRef(null);\n  const amountRef = useRef(null);\n  const dueRef = useRef(null);\n  const editDescriptionRef = useRef(null);\n  const editAmountRef = useRef(null);\n\n  const [sendBills, setSendBills] = useState([]);\n  const [editSendBills, setEditSendBills] = useState({});\n  const [open, setOpen] = useState(false);\n  const [bankAccount, setBankAccount] = useState(null);\n  useEffect(() => {\n    (async () => {\n      setSendBills(await getSendBill());\n      setBankAccount(await getBankAccount());\n    })();\n  }, []);\n\n  const handleOnSendBill = async () => {\n    const email = emailRef.current.value;\n    const description = descriptionRef.current.value;\n    const currency = currencyRef.current.value;\n    const amount = amountRef.current.value;\n    const due = dueRef.current.value;\n\n    const d = {\n      email,\n      description,\n      currency,\n      amount,\n      due,\n    };\n    await addSendBill(d);\n    setSendBills(await getSendBill());\n    emailRef.current.value = '';\n    descriptionRef.current.value = '';\n    currencyRef.current.value = '';\n    amountRef.current.value = '';\n    dueRef.current.value = '';\n    window.message('Bill added!');\n  };\n\n  const handleOnEditSendBill = (b) => {\n    setEditSendBills(b);\n    setOpen(!open);\n  };\n\n  const handleOnSaveEditSendBill = async () => {\n    const description = editDescriptionRef.current.value;\n    const amount = editAmountRef.current.value;\n    const d = {\n      ...editSendBills,\n      description,\n      amount,\n    };\n    await editSendBill(d);\n    window.message('Update bill!');\n    setOpen(!open);\n    setSendBills(await getSendBill());\n  };\n  const handleOnSaveCancelSendBill = async () => {\n    const d = {\n      ...editSendBills,\n      status: 'CANCELLED',\n    };\n    await editSendBill(d);\n    window.message('Cancelled bill!');\n    setOpen(!open);\n    setSendBills(await getSendBill());\n  };\n  const handleClose = () => {\n    setOpen(!open);\n  };\n\n  return (\n    bankAccount ? (\n      <>\n        <Dialog open={open} onClose={handleClose}>\n          <div className=\"modal\">\n            <h2>Edit bill</h2>\n            <div>\n              Description <br />\n              <input type=\"text\" ref={editDescriptionRef} defaultValue={editSendBills.description} />\n            </div>\n            <div className=\"small-margin-top\">\n              Amount <br />\n              <input type=\"number\" ref={editAmountRef} defaultValue={editSendBills.amount} />\n            </div>\n            <div className=\"flex flex-justify-content-space-between\">\n              <button className=\"button\" onClick={handleOnSaveEditSendBill}>Edit bill</button>\n              <button className=\"button\" onClick={handleOnSaveCancelSendBill}>Cancel bill</button>\n              <button className=\"button\" onClick={handleClose}>Cancel</button>\n            </div>\n          </div>\n        </Dialog>\n\n        <div className=\"flex\">\n          <div className=\"flex-full\">\n            <h2>Add a bill</h2>\n            <div className=\"small-margin-top\">\n              Payers email <br /><input type=\"text\" ref={emailRef} />\n            </div>\n            <div className=\"small-margin-top\">\n              Description <br /><input type=\"text\" ref={descriptionRef} />\n            </div>\n            <div className=\"small-margin-top\">\n              Currency <br />\n              <select ref={currencyRef} defaultValue={bankAccount.primaryCurrency}>\n                {allCurrencyList.map((c, i) => {\n                  return <option key={i} value={c.code}>{c.code}</option>;\n                })}\n              </select>\n            </div>\n            <div className=\"small-margin-top\">\n              Amount <br /><input type=\"number\" ref={amountRef} />\n            </div>\n            <div className=\"small-margin-top\">\n              Due date <br /><input type=\"date\" ref={dueRef} />\n            </div>\n            <div>\n              <button className=\"button\" onClick={handleOnSendBill}>Send bill</button>\n            </div>\n          </div>\n          <div className=\"flex-full\">\n            <h2>Your bills</h2>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <td>Payers Email</td>\n                  <td>Description</td>\n                  <td>Currency</td>\n                  <td>Amount</td>\n                  <td>Due date</td>\n                  <td>Status</td>\n                  <td>&nbsp;</td>\n                </tr>\n              </thead>\n              <tbody>\n                {sendBills.map((b) => {\n                  return (\n                    <tr key={b.id}>\n                      <td>{b.email}</td>\n                      <td>{b.description}</td>\n                      <td>{b.currency}</td>\n                      <td>{b.amount}</td>\n                      <td>{new Date(b.due).toDateString()}</td>\n                      <td>{b.status}</td>\n                      <td>\n                        <button className=\"button no-margin-top\"\n                          onClick={() => { handleOnEditSendBill(b); }}>Edit</button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    ) : <div>Loading bank account</div>\n  );\n};\n\nexport default SendBill;\n","import React, { useEffect, useState, useRef } from 'react';\nimport _ from 'lodash';\nimport {\n  editSendBill,\n  getBalance,\n  getBill,\n  getExchangeRates,\n  allCurrencyList,\n  settlePayBill,\n} from '../util/fetch/api';\n\nconst PayBill = () => {\n  const [bills, setBills] = useState([]);\n  const [currentBill, setCurrentBill] = useState(null);\n  const [exchangeRate, setExchangeRate] = useState(1);\n  const [serviceFee, setServiceFee] = useState(0);\n  const [billAmount, setBillAmount] = useState(0);\n  const [totalBalance, setTotalBalance] = useState(0);\n  const currencyRef = useRef(null);\n  const [billCurrency, setBillCurrency] = useState('EUR');\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [balance, setBalances] = useState({\n    USD: 0,\n    EUR: 0,\n    GBP: 0,\n    INR: 0,\n    RMB: 0,\n    BITCOIN: 0,\n  });\n\n  const updateRates = async (\n    currencyVal,\n    bill = null,\n    exchangeRatesValue = null,\n    balancesValue = null,\n  ) => {\n    const balancesData = balancesValue || balance;\n    const balances = [\n      { currency: 'USD', balance: balancesData.USD },\n      { currency: 'EUR', balance: balancesData.EUR },\n      { currency: 'GBP', balance: balancesData.GBP },\n      { currency: 'INR', balance: balancesData.INR },\n      { currency: 'RMB', balance: balancesData.RMB },\n      { currency: 'BITCOIN', balance: balancesData.BITCOIN },\n    ];\n\n    const temp = bill || currentBill;\n    let lExchangeRate = 1;\n    let lServiceFee = 0;\n\n    const exchangeRatesData = exchangeRatesValue || exchangeRates;\n\n    lExchangeRate = exchangeRatesData[temp.currency].rates[currencyVal];\n    if (currencyVal !== temp.currency) {\n      lServiceFee = temp.amount * lExchangeRate * exchangeRatesData.ServiceRate;\n    }\n\n    setBillCurrency(currencyVal);\n\n    const totalBalance = balances.filter(\n      (balance) => balance.currency === currencyVal,\n    );\n    setTotalBalance(totalBalance[0].balance);\n    setBillAmount(temp.amount * lExchangeRate);\n    setExchangeRate(lExchangeRate.toFixed(9));\n    setServiceFee(lServiceFee.toFixed(9));\n  };\n\n  const loadBalance = async (currency, bills = null, exchangeRates = null) => {\n    const balances = await getBalance();\n    if (balances.length) {\n      const b = _.keyBy(balances, 'currency');\n\n      const temp = {\n        USD: b.USD.balance,\n        EUR: b.EUR.balance,\n        GBP: b.GBP.balance,\n        INR: b.INR.balance,\n        RMB: b.RMB.balance,\n        BITCOIN: b.BITCOIN.balance,\n      };\n      setBalances(temp);\n      await updateRates(currency, bills, exchangeRates, temp);\n    }\n  };\n\n  const loadInitialData = async (exchangeRates = null) => {\n    setBills([]);\n    setCurrentBill(null);\n    let billsValue = await getBill();\n    if (billsValue.length > 0) {\n      billsValue = billsValue.filter((bill) => bill.status === 'WAITING');\n      if (billsValue.length > 0) {\n        setBills(billsValue);\n        setCurrentBill(billsValue[0]);\n        setBillAmount(billsValue[0].amount);\n        await loadBalance(billsValue[0].currency, billsValue[0], exchangeRates);\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const exchangeRates = await getExchangeRates();\n      setExchangeRates(exchangeRates);\n      await loadInitialData(exchangeRates);\n    })();\n  }, []);\n\n  const handleOnBillChange = async (e) => {\n    const bill = bills.filter((b) => {\n      return b.id === parseInt(e.target.value);\n    });\n    setCurrentBill(bill[0]);\n    setBillCurrency(bill[0].currency);\n    await updateRates(bill[0].currency, bill[0]);\n  };\n\n  const handleBalance = async (e) => {\n    await updateRates(e.target.value);\n  };\n\n  const rejectBill = async () => {\n    if (\n      currentBill.status === 'PAID'\n            || currentBill.status === 'REJECTED'\n            || currentBill.status === 'CANCELLED'\n    ) {\n      window.error('Bill status cannot be changed after settling');\n    } else {\n      const rejectedBill = { ...currentBill, status: 'REJECTED' };\n      await editSendBill(rejectedBill);\n      await loadInitialData(exchangeRates);\n      window.message('Bill was rejected');\n    }\n  };\n\n  const payBill = async () => {\n    if (\n      currentBill.status === 'PAID'\n            || currentBill.status === 'REJECTED'\n            || currentBill.status === 'CANCELLED'\n    ) {\n      window.error('Bill status cannot be changed after settling');\n    } else if (totalBalance < billAmount) {\n      window.error('Insufficient balance for bill payment');\n    } else {\n      const billData = {\n        ...currentBill,\n        currency: billCurrency,\n        amount: billAmount,\n        status: 'PAID',\n      };\n      await settlePayBill(billData);\n      await loadInitialData(exchangeRates);\n      window.message('Bill was paid');\n    }\n  };\n  return (\n    <div className=\"body\">\n      {bills.length ? (\n        <>\n          Select a bill to pay&nbsp;\n          <select onChange={handleOnBillChange}>\n            {bills.map((b) => {\n              return (\n                <option value={b.id} key={b.id}>\n                  Bill #{b.id} from {b.customer.name}\n                </option>\n              );\n            })}\n          </select>\n          {currentBill == null ? (\n            <div>Please select a bill to view</div>\n          ) : (\n            <div>\n              <div>\n                <div className=\"small-margin-top\">\n                  Pay with currency&nbsp;&nbsp;\n                  <select value={billCurrency} ref={currencyRef} onChange={handleBalance}\n                    className=\"no-margin-top\">\n                    {allCurrencyList.map((c, i) => {\n                      return (\n                        <option key={i} value={c.code}>\n                          {c.code}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n                <div className=\"small-margin-top\">\n                  Total to pay: <b>{billAmount.toFixed(9)}</b>\n                </div>\n                <div>\n                  Available balance: <b>{totalBalance}</b>\n                </div>\n                <div>\n                  Exchange rate: <b>{exchangeRate}</b>\n                </div>\n                <div>\n                  Service Fee: <b>{serviceFee}</b>\n                </div>\n                <hr />\n                <div>\n                  Pay to <b>{currentBill.customer.name}</b>\n                  &nbsp;({currentBill.customer.bankAccount.bankName})\n                </div>\n                <div>\n                  <b>{currentBill.currency}{currentBill.amount}</b> (Status : {currentBill.status})\n                </div>\n              </div>\n              <div className=\"flex-justify-content-space-between\">\n                <button className=\"button\" onClick={rejectBill}>\n                  Reject\n                </button>\n                <button className=\"button small-margin-left\" onClick={payBill}>\n                  Pay\n                </button>\n              </div>\n            </div>\n          )}\n        </>\n      ) : <span>No bills to pay</span>}\n      <hr />\n\n    </div>\n  );\n};\n\nexport default PayBill;\n","import React from 'react';\n\nconst MarketStrategy = () => {\n  return (\n    <div>\n      Market Strategy\n    </div>\n  );\n};\n\nexport default MarketStrategy;\n","import React from 'react';\n\nconst TransactionProcessing = () => {\n  return (\n    <div>\n      Transaction processing\n    </div>\n  );\n};\n\nexport default TransactionProcessing;\n","import React from 'react';\n\nconst ServiceFee = () => {\n  return (\n    <div>\n      Service Fee\n    </div>\n  );\n};\n\nexport default ServiceFee;\n","import React from 'react';\n\nconst Messaging = () => {\n  return (\n    <div>\n      Messaging\n    </div>\n  );\n};\n\nexport default Messaging;\n","import React, { useEffect, useState } from 'react';\nimport { getReports } from '../util/fetch/api';\n\nconst Reporting = () => {\n  const [reports, setReports] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const reports = await getReports();\n      setReports(reports);\n    })();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      {reports\n        ? (\n          <div>\n            <h2>Bitcorner report</h2>\n            <h3>Bitcorner balance</h3>\n            <div className=\"small-margin-top\">\n              {reports.bitcornerBalance ? reports.bitcornerBalance.map((b) => {\n                return <div key={b.id}>{b.currency} {b.balance}</div>;\n              }) : <div>No balance to show</div>}\n            </div>\n            <hr />\n            <h3>Account balance</h3>\n            <div className=\"small-margin-top\">\n              {reports.balances ? reports.balances.map((b) => {\n                return <div key={b.id}>{b.currency} {b.balance}</div>;\n              }) : <div>No balance to show</div>}\n            </div>\n            <hr />\n            <h3>Stats</h3>\n            <div className=\"small-margin-top\">\n              Orders fulfilled <b>{reports.noOfOrdersFulfilled}</b>\n            </div>\n            <div>\n              Number of customers <b>{reports.totalCustomers}</b>\n            </div>\n            <div>\n              Number of orders <b>{reports.totalOrdersCreated}</b>\n            </div>\n            <hr />\n            <div>\n              <h3>Transactions</h3>\n              <table className=\"table small-margin-top\">\n                <thead>\n                  <tr>\n                    <td>Order Id</td>\n                    <td>Transaction type</td>\n                    <td>Currency</td>\n                    <td>Amount</td>\n                    <td>Bitcoins</td>\n                    <td>Price type</td>\n                    <td>Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {reports.transactions.map((b) => {\n                    return (\n                      <tr key={b.id}>\n                        <td>{b.id}</td>\n                        <td>{b.buy ? 'Buy' : 'Sell'}</td>\n                        <td>{b.currency}</td>\n                        <td>{b.amount}</td>\n                        <td>{b.bitcoins}</td>\n                        <td>{b.marketOrder ? 'Market order' : 'Limit order'} </td>\n                        <td>{b.status}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n            <div>\n              <hr />\n              <h3>Bills</h3>\n              <table className=\"table small-margin-top\">\n                <thead>\n                  <tr>\n                    <td>Amount</td>\n                    <td>Currency</td>\n                    <td>Description</td>\n                    <td>Due</td>\n                    <td>Email</td>\n                    <td>Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {reports.bills.map((b) => {\n                    return (\n                      <tr key={b.id}>\n                        <td>{b.amount}</td>\n                        <td>{b.currency}</td>\n                        <td>{b.description}</td>\n                        <td>{new Date(b.due).toDateString()}</td>\n                        <td>{b.email}</td>\n                        <td>{b.status}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )\n        : <div>Loading report</div>}\n    </div>\n  );\n};\n\nexport default Reporting;\n","import React, { useEffect, useState } from 'react';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport BankAccount from './BankAccount';\nimport PrevailingRates from './PrevailingRates';\nimport Balance from './Balance';\nimport { useAuth } from '../contexts/AuthContext';\nimport TransactBitCoin from './TransactBitCoin';\nimport SendBill from './SendBill';\nimport PayBill from './PayBill';\nimport MarketStrategy from './MarketStrategy';\nimport TransactionProcessing from './TransactionProcessing';\nimport ServiceFee from './ServiceFee';\nimport Messaging from './Messaging';\nimport Reporting from './Reporting';\nimport { getBankAccount, getCustomer } from '../util/fetch/api';\n\nconst CustomerHome = ({ history }) => {\n\n  history.listen(() => {\n    window.message(null);\n    window.error(null);\n  });\n\n  const { logout } = useAuth();\n  const [customer, setCustomer] = useState(null);\n  const [bankAccount, setBankAccount] = useState(null);\n  const r = window.appRoutes;\n\n  useEffect(() => {\n    (async () => {\n      setCustomer(await getCustomer());\n      setBankAccount(await getBankAccount());\n    })();\n  }, []);\n\n  const onLogout = async () => {\n    try {\n      await logout();\n    } catch (e) {\n      window.error(e.message);\n    }\n    history.push(window.appRoutes.home);\n  };\n\n  const routes = [\n    [r.customerProfile, <BankAccount />, true],\n    [r.prevailingRates, <PrevailingRates />, true],\n    [r.customerBalance, <Balance />, true],\n    [r.customerTransactBitCoin, <TransactBitCoin />, true],\n    [r.customerSendBill, <SendBill />, true],\n    [r.customerPayBill, <PayBill />, true],\n    [r.customerMarketStrategy, <MarketStrategy />, true],\n    [r.customerTransactionProcessing, <TransactionProcessing />, true],\n    [r.customerServiceFee, <ServiceFee />, true],\n    [r.customerMessaging, <Messaging />, true],\n    [r.customerReporting, <Reporting />, true],\n  ];\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to={r.customerProfile}>Bank account</Link>\n        {bankAccount && <Link to={r.customerBalance}>Balance</Link>}\n        {bankAccount && <Link to={r.prevailingRates}>Market orders</Link>}\n        {bankAccount && <Link to={r.customerTransactBitCoin}>Transact bitcoin</Link>}\n        {bankAccount && <Link to={r.customerSendBill}>Send bill</Link>}\n        {bankAccount && <Link to={r.customerPayBill}>Pay bill</Link>}\n        {bankAccount && <Link to={r.customerReporting}>Reporting</Link>}\n        <button className=\"button no-margin-top\" onClick={onLogout}>Logout</button>\n      </div>\n      <div className=\"body\">\n        {customer && customer.isEmailVerified && customer.customer !== null\n          ? routes.map((r) => {\n            return (\n              <Route path={r[0]} exact={r[2]} key={r[0]}>\n                {r[1]}\n              </Route>\n            );\n          })\n          : <div className=\"center\">Please complete your signup first!</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(CustomerHome);\n","import './App.css';\nimport {\n  HashRouter as Router, Switch, Route,\n} from 'react-router-dom';\nimport React from 'react';\n\nimport Landing from './components/Landing';\nimport CustomerSignup from './components/CustomerSignup';\nimport CustomerHome from './components/CustomerHome';\nimport { AuthProvider } from './contexts/AuthContext';\n\nconst r = {\n  home: '/',\n  customerHome: '/customerHome',\n  customerSignup: '/customerSignup',\n  customerProfile: '/customerHome/profile',\n  prevailingRates: '/customerHome/prevailingRates',\n  customerBalance: '/customerHome/balance',\n  customerTransactBitCoin: '/customerHome/transactBitCoin',\n  customerSendBill: '/customerHome/sendBill',\n  customerPayBill: '/customerHome/payBill',\n  customerMarketStrategy: '/customerHome/marketStrategy',\n  customerTransactionProcessing: '/customerHome/transactionProcessing',\n  customerServiceFee: '/customerHome/serviceFee',\n  customerMessaging: '/customerHome/messaging',\n  customerReporting: '/customerHome/reporting',\n};\n\nwindow.appRoutes = r;\n\nexport default function App() {\n  const routes = [\n    [r.home, <Landing />, true],\n    [r.customerHome, <CustomerHome />, false],\n    [r.customerSignup, <CustomerSignup />, true],\n  ];\n\n  return (\n    <Router>\n      <Switch>\n        <AuthProvider>\n          {routes.map((r) => {\n            return (\n              <Route path={r[0]} exact={r[2]} key={r[0]}>\n                {r[1]}\n              </Route>\n            );\n          })}\n        </AuthProvider>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.error = (msg) => {\n  const e = window.document.getElementById('err');\n  e.innerText = msg;\n};\nwindow.message = (msg) => {\n  const e = window.document.getElementById('msg');\n  e.innerText = msg;\n};\nwindow.showLoading = () => {\n  const e = window.document.getElementById('loading');\n  e.style.display = 'block';\n};\nwindow.hideLoading = () => {\n  const e = window.document.getElementById('loading');\n  e.style.display = 'none';\n};\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}